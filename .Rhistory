subfolder <- paste0(case, "/")  # subfolder from where the files must be loaded or to where the files must be saved
plots_path <- paste0(mainfolder, subfolder,"plots/")  # path used to save the plots (generated using the .csv data)
file_rdata <- paste0("sums", case_subcase, ".Rdata")
file_rdata_areas <- paste0("areas_", case_areas, ".Rdata")
rdata_path <- paste0(mainfolder, subfolder, file_rdata)
rdata_path_areas <- paste0(mainfolder, "areas/", case_areas, "/", file_rdata_areas)
csv_path <- paste0(mainfolder, subfolder,"csv/")      # path used to save csv (generated using the .Rdata)
csv_path_areas <-  paste0(mainfolder, "areas/", case_areas, "/")     # path used to save csv with data on areas (generated using the .Rdata)
if (energy_exports == "ex") { EUinternal.barplot.noEPex(csv_path, case_subcase, plots_path, year) # EU_barplots.R
}else if(energy_exports == "EPnoex") { EUinternal.barplot.EPnoex(csv_path, case_subcase, plots_path, year)
}else if(energy_exports == "noEPnoex") { EUinternal.barplot.noEPnoex(csv_path, case_subcase, plots_path, year)}
setwd("C:/Users/Rosa/Documents/GitHub/forest-management")
library(pacman)
p_load(dplyr, tidyr, abind, tidyverse, stringr)  # dataframe management and string management
p_load(ggplot2, colorspace, scico, viridis, RColorBrewer, gridExtra, nord, ggpubr, sf, sp, rgdal) # plotting
select <- dplyr::select
source("./aggregation_plotting/scripts_aggregation/aggregate_results.R")           # functions to convert the results of the model in a single .Rdata file
source("./aggregation_plotting/scripts_aggregation/global_Rdata-to-csv.R")                 # functions to convert the .Rdata file to several .csv for impacts of global land use
source("./aggregation_plotting/scripts_aggregation/areas_Rdata-to-csv.R")                   # functions to convert the .Rdata file to several .csv for areas
source("./aggregation_plotting/scripts_charts/global_time-series.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_charts/map_areas.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_aggregation/EU_Rdata-to-csv.R")                      # functions to convert the .Rdata file to several .csv for EU impacts
source("./aggregation_plotting/scripts_charts/EU_barplots.R")                                   # functions to plot the impacts of EU
source("./aggregation_plotting/scripts_charts/map_PDF.R")                                       # functions to plot the impacts on a map
source("./aggregation_plotting/scripts_aggregation/slost_Globiom.R")
source("./aggregation_plotting/scripts_aggregation/wood.R")
source("./aggregation_plotting/scripts_aggregation/slost_ha.R")
############################ SET THE PATH ##############################
# identify the results to access
type_of_data <- "impacts"       # "impacts" or "areas"
case <- "nocutoff_timber"              # cutoff, nocutoff, cutoff_timber, nocutoff_timber, LCImpact, Chaudhary2015 or Chaudhary2018
subcase <- ""                   # e.g. plants, mammals or birds (end of the csv files)
case_areas <- "notimber"        # "notimber" or "timber"
energy_exports <- "EPnoex"    # "ex" (Footprint includes energy plantations, Internal EU does not include energy crops but includes exports)
# "EPnoex" (Footprint includes energy plantations and Internal EU includes energy crop and exports)
# "noEPnoex" (Footprint does not include energy plantations, Internal EU does not include nor energy crop nor exports)
if(subcase == "") {
case_subcase <- paste0("_", case)
} else {case_subcase <- paste0("_", case, "_", subcase)}
CI <- FALSE # TRUE or FALSE
year = "2100"
############################ RESULTS DIRECTLY FROM THE MODEL ##############################
# access the results obtained directly from the model
folder_slost = paste0("./results/slost/species-lost_", case, "/")
file_slost = "Slost_mg_"     # in the call of the file the year and the subcase are added
folder_areas = paste0("./results/areas/", case_areas , "/mg/disaggregated/")
############################ ACCESS THE FOLDER WHERE RESULTS ARE AGGREGATED AND PLOTTED ##############################
# calculation -> PLOTTING -> RESULTS -> SUBFOLDER, whose name marks may refer to different types of results (with cutoff, without cutoff, with timber, without timber, etc)
# -> CSV or PLOTS or .Rdata files
mainfolder <- "./aggregation_plotting/results_plots-csv/"
subfolder <- paste0(case, "/")  # subfolder from where the files must be loaded or to where the files must be saved
plots_path <- paste0(mainfolder, subfolder,"plots/")  # path used to save the plots (generated using the .csv data)
file_rdata <- paste0("sums", case_subcase, ".Rdata")
file_rdata_areas <- paste0("areas_", case_areas, ".Rdata")
rdata_path <- paste0(mainfolder, subfolder, file_rdata)
rdata_path_areas <- paste0(mainfolder, "areas/", case_areas, "/", file_rdata_areas)
csv_path <- paste0(mainfolder, subfolder,"csv/")      # path used to save csv (generated using the .Rdata)
csv_path_areas <-  paste0(mainfolder, "areas/", case_areas, "/")     # path used to save csv with data on areas (generated using the .Rdata)
if (energy_exports == "ex") { EUinternal.barplot.noEPex(csv_path, case_subcase, plots_path, year) # EU_barplots.R
}else if(energy_exports == "EPnoex") { EUinternal.barplot.EPnoex(csv_path, case_subcase, plots_path, year)
}else if(energy_exports == "noEPnoex") { EUinternal.barplot.noEPnoex(csv_path, case_subcase, plots_path, year)}
setwd("C:/Users/Rosa/Documents/GitHub/forest-management")
library(pacman)
p_load(dplyr, tidyr, abind, tidyverse, stringr)  # dataframe management and string management
p_load(ggplot2, colorspace, scico, viridis, RColorBrewer, gridExtra, nord, ggpubr, sf, sp, rgdal) # plotting
select <- dplyr::select
source("./aggregation_plotting/scripts_aggregation/aggregate_results.R")           # functions to convert the results of the model in a single .Rdata file
source("./aggregation_plotting/scripts_aggregation/global_Rdata-to-csv.R")                 # functions to convert the .Rdata file to several .csv for impacts of global land use
source("./aggregation_plotting/scripts_aggregation/areas_Rdata-to-csv.R")                   # functions to convert the .Rdata file to several .csv for areas
source("./aggregation_plotting/scripts_charts/global_time-series.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_charts/map_areas.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_aggregation/EU_Rdata-to-csv.R")                      # functions to convert the .Rdata file to several .csv for EU impacts
source("./aggregation_plotting/scripts_charts/EU_barplots.R")                                   # functions to plot the impacts of EU
source("./aggregation_plotting/scripts_charts/map_PDF.R")                                       # functions to plot the impacts on a map
source("./aggregation_plotting/scripts_aggregation/slost_Globiom.R")
source("./aggregation_plotting/scripts_aggregation/wood.R")
source("./aggregation_plotting/scripts_aggregation/slost_ha.R")
############################ SET THE PATH ##############################
# identify the results to access
type_of_data <- "impacts"       # "impacts" or "areas"
case <- "nocutoff"              # cutoff, nocutoff, cutoff_timber, nocutoff_timber, LCImpact, Chaudhary2015 or Chaudhary2018
subcase <- ""                   # e.g. plants, mammals or birds (end of the csv files)
case_areas <- "notimber"        # "notimber" or "timber"
energy_exports <- "EPnoex"    # "ex" (Footprint includes energy plantations, Internal EU does not include energy crops but includes exports)
# "EPnoex" (Footprint includes energy plantations and Internal EU includes energy crop and exports)
# "noEPnoex" (Footprint does not include energy plantations, Internal EU does not include nor energy crop nor exports)
if(subcase == "") {
case_subcase <- paste0("_", case)
} else {case_subcase <- paste0("_", case, "_", subcase)}
CI <- FALSE # TRUE or FALSE
year = "2100"
############################ RESULTS DIRECTLY FROM THE MODEL ##############################
# access the results obtained directly from the model
folder_slost = paste0("./results/slost/species-lost_", case, "/")
file_slost = "Slost_mg_"     # in the call of the file the year and the subcase are added
folder_areas = paste0("./results/areas/", case_areas , "/mg/disaggregated/")
############################ ACCESS THE FOLDER WHERE RESULTS ARE AGGREGATED AND PLOTTED ##############################
# calculation -> PLOTTING -> RESULTS -> SUBFOLDER, whose name marks may refer to different types of results (with cutoff, without cutoff, with timber, without timber, etc)
# -> CSV or PLOTS or .Rdata files
mainfolder <- "./aggregation_plotting/results_plots-csv/"
subfolder <- paste0(case, "/")  # subfolder from where the files must be loaded or to where the files must be saved
plots_path <- paste0(mainfolder, subfolder,"plots/")  # path used to save the plots (generated using the .csv data)
file_rdata <- paste0("sums", case_subcase, ".Rdata")
file_rdata_areas <- paste0("areas_", case_areas, ".Rdata")
rdata_path <- paste0(mainfolder, subfolder, file_rdata)
rdata_path_areas <- paste0(mainfolder, "areas/", case_areas, "/", file_rdata_areas)
csv_path <- paste0(mainfolder, subfolder,"csv/")      # path used to save csv (generated using the .Rdata)
csv_path_areas <-  paste0(mainfolder, "areas/", case_areas, "/")     # path used to save csv with data on areas (generated using the .Rdata)
if (energy_exports == "ex") { EUinternal.barplot.noEPex(csv_path, case_subcase, plots_path, year) # EU_barplots.R
}else if(energy_exports == "EPnoex") { EUinternal.barplot.EPnoex(csv_path, case_subcase, plots_path, year)
}else if(energy_exports == "noEPnoex") { EUinternal.barplot.noEPnoex(csv_path, case_subcase, plots_path, year)}
setwd("C:/Users/Rosa/Documents/GitHub/forest-management")
library(pacman)
p_load(dplyr, tidyr, abind, tidyverse, stringr)  # dataframe management and string management
p_load(ggplot2, colorspace, scico, viridis, RColorBrewer, gridExtra, nord, ggpubr, sf, sp, rgdal) # plotting
select <- dplyr::select
source("./aggregation_plotting/scripts_aggregation/aggregate_results.R")           # functions to convert the results of the model in a single .Rdata file
source("./aggregation_plotting/scripts_aggregation/global_Rdata-to-csv.R")                 # functions to convert the .Rdata file to several .csv for impacts of global land use
source("./aggregation_plotting/scripts_aggregation/areas_Rdata-to-csv.R")                   # functions to convert the .Rdata file to several .csv for areas
source("./aggregation_plotting/scripts_charts/global_time-series.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_charts/map_areas.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_aggregation/EU_Rdata-to-csv.R")                      # functions to convert the .Rdata file to several .csv for EU impacts
source("./aggregation_plotting/scripts_charts/EU_barplots.R")                                   # functions to plot the impacts of EU
source("./aggregation_plotting/scripts_charts/map_PDF.R")                                       # functions to plot the impacts on a map
source("./aggregation_plotting/scripts_aggregation/slost_Globiom.R")
source("./aggregation_plotting/scripts_aggregation/wood.R")
source("./aggregation_plotting/scripts_aggregation/slost_ha.R")
############################ SET THE PATH ##############################
# identify the results to access
type_of_data <- "impacts"       # "impacts" or "areas"
case <- "cutoff_timber"              # cutoff, nocutoff, cutoff_timber, nocutoff_timber, LCImpact, Chaudhary2015 or Chaudhary2018
subcase <- ""                   # e.g. plants, mammals or birds (end of the csv files)
case_areas <- "notimber"        # "notimber" or "timber"
energy_exports <- "EPnoex"    # "ex" (Footprint includes energy plantations, Internal EU does not include energy crops but includes exports)
# "EPnoex" (Footprint includes energy plantations and Internal EU includes energy crop and exports)
# "noEPnoex" (Footprint does not include energy plantations, Internal EU does not include nor energy crop nor exports)
if(subcase == "") {
case_subcase <- paste0("_", case)
} else {case_subcase <- paste0("_", case, "_", subcase)}
CI <- FALSE # TRUE or FALSE
year = "2100"
############################ RESULTS DIRECTLY FROM THE MODEL ##############################
# access the results obtained directly from the model
folder_slost = paste0("./results/slost/species-lost_", case, "/")
file_slost = "Slost_mg_"     # in the call of the file the year and the subcase are added
folder_areas = paste0("./results/areas/", case_areas , "/mg/disaggregated/")
############################ ACCESS THE FOLDER WHERE RESULTS ARE AGGREGATED AND PLOTTED ##############################
# calculation -> PLOTTING -> RESULTS -> SUBFOLDER, whose name marks may refer to different types of results (with cutoff, without cutoff, with timber, without timber, etc)
# -> CSV or PLOTS or .Rdata files
mainfolder <- "./aggregation_plotting/results_plots-csv/"
subfolder <- paste0(case, "/")  # subfolder from where the files must be loaded or to where the files must be saved
plots_path <- paste0(mainfolder, subfolder,"plots/")  # path used to save the plots (generated using the .csv data)
file_rdata <- paste0("sums", case_subcase, ".Rdata")
file_rdata_areas <- paste0("areas_", case_areas, ".Rdata")
rdata_path <- paste0(mainfolder, subfolder, file_rdata)
rdata_path_areas <- paste0(mainfolder, "areas/", case_areas, "/", file_rdata_areas)
csv_path <- paste0(mainfolder, subfolder,"csv/")      # path used to save csv (generated using the .Rdata)
csv_path_areas <-  paste0(mainfolder, "areas/", case_areas, "/")     # path used to save csv with data on areas (generated using the .Rdata)
if (energy_exports == "ex") { EUinternal.barplot.noEPex(csv_path, case_subcase, plots_path, year) # EU_barplots.R
}else if(energy_exports == "EPnoex") { EUinternal.barplot.EPnoex(csv_path, case_subcase, plots_path, year)
}else if(energy_exports == "noEPnoex") { EUinternal.barplot.noEPnoex(csv_path, case_subcase, plots_path, year)}
setwd("C:/Users/Rosa/Documents/GitHub/forest-management")
library(pacman)
p_load(dplyr, tidyr, abind, tidyverse, stringr)  # dataframe management and string management
p_load(ggplot2, colorspace, scico, viridis, RColorBrewer, gridExtra, nord, ggpubr, sf, sp, rgdal) # plotting
select <- dplyr::select
source("./aggregation_plotting/scripts_aggregation/aggregate_results.R")           # functions to convert the results of the model in a single .Rdata file
source("./aggregation_plotting/scripts_aggregation/global_Rdata-to-csv.R")                 # functions to convert the .Rdata file to several .csv for impacts of global land use
source("./aggregation_plotting/scripts_aggregation/areas_Rdata-to-csv.R")                   # functions to convert the .Rdata file to several .csv for areas
source("./aggregation_plotting/scripts_charts/global_time-series.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_charts/map_areas.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_aggregation/EU_Rdata-to-csv.R")                      # functions to convert the .Rdata file to several .csv for EU impacts
source("./aggregation_plotting/scripts_charts/EU_barplots.R")                                   # functions to plot the impacts of EU
source("./aggregation_plotting/scripts_charts/map_PDF.R")                                       # functions to plot the impacts on a map
source("./aggregation_plotting/scripts_aggregation/slost_Globiom.R")
source("./aggregation_plotting/scripts_aggregation/wood.R")
source("./aggregation_plotting/scripts_aggregation/slost_ha.R")
############################ SET THE PATH ##############################
# identify the results to access
type_of_data <- "impacts"       # "impacts" or "areas"
case <- "cutoff"              # cutoff, nocutoff, cutoff_timber, nocutoff_timber, LCImpact, Chaudhary2015 or Chaudhary2018
subcase <- ""                   # e.g. plants, mammals or birds (end of the csv files)
case_areas <- "notimber"        # "notimber" or "timber"
energy_exports <- "EPnoex"    # "ex" (Footprint includes energy plantations, Internal EU does not include energy crops but includes exports)
# "EPnoex" (Footprint includes energy plantations and Internal EU includes energy crop and exports)
# "noEPnoex" (Footprint does not include energy plantations, Internal EU does not include nor energy crop nor exports)
if(subcase == "") {
case_subcase <- paste0("_", case)
} else {case_subcase <- paste0("_", case, "_", subcase)}
CI <- FALSE # TRUE or FALSE
year = "2100"
############################ RESULTS DIRECTLY FROM THE MODEL ##############################
# access the results obtained directly from the model
folder_slost = paste0("./results/slost/species-lost_", case, "/")
file_slost = "Slost_mg_"     # in the call of the file the year and the subcase are added
folder_areas = paste0("./results/areas/", case_areas , "/mg/disaggregated/")
############################ ACCESS THE FOLDER WHERE RESULTS ARE AGGREGATED AND PLOTTED ##############################
# calculation -> PLOTTING -> RESULTS -> SUBFOLDER, whose name marks may refer to different types of results (with cutoff, without cutoff, with timber, without timber, etc)
# -> CSV or PLOTS or .Rdata files
mainfolder <- "./aggregation_plotting/results_plots-csv/"
subfolder <- paste0(case, "/")  # subfolder from where the files must be loaded or to where the files must be saved
plots_path <- paste0(mainfolder, subfolder,"plots/")  # path used to save the plots (generated using the .csv data)
file_rdata <- paste0("sums", case_subcase, ".Rdata")
file_rdata_areas <- paste0("areas_", case_areas, ".Rdata")
rdata_path <- paste0(mainfolder, subfolder, file_rdata)
rdata_path_areas <- paste0(mainfolder, "areas/", case_areas, "/", file_rdata_areas)
csv_path <- paste0(mainfolder, subfolder,"csv/")      # path used to save csv (generated using the .Rdata)
csv_path_areas <-  paste0(mainfolder, "areas/", case_areas, "/")     # path used to save csv with data on areas (generated using the .Rdata)
if (energy_exports == "ex") { EUinternal.barplot.noEPex(csv_path, case_subcase, plots_path, year) # EU_barplots.R
}else if(energy_exports == "EPnoex") { EUinternal.barplot.EPnoex(csv_path, case_subcase, plots_path, year)
}else if(energy_exports == "noEPnoex") { EUinternal.barplot.noEPnoex(csv_path, case_subcase, plots_path, year)}
source("./aggregation_plotting/scripts_charts/EU_barplots.R")                                   # functions to plot the impacts of EU
setwd("C:/Users/Rosa/Documents/GitHub/forest-management")
library(pacman)
p_load(dplyr, tidyr, abind, tidyverse, stringr)  # dataframe management and string management
p_load(ggplot2, colorspace, scico, viridis, RColorBrewer, gridExtra, nord, ggpubr, sf, sp, rgdal) # plotting
select <- dplyr::select
source("./aggregation_plotting/scripts_aggregation/aggregate_results.R")           # functions to convert the results of the model in a single .Rdata file
source("./aggregation_plotting/scripts_aggregation/global_Rdata-to-csv.R")                 # functions to convert the .Rdata file to several .csv for impacts of global land use
source("./aggregation_plotting/scripts_aggregation/areas_Rdata-to-csv.R")                   # functions to convert the .Rdata file to several .csv for areas
source("./aggregation_plotting/scripts_charts/global_time-series.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_charts/map_areas.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_aggregation/EU_Rdata-to-csv.R")                      # functions to convert the .Rdata file to several .csv for EU impacts
source("./aggregation_plotting/scripts_charts/EU_barplots.R")                                   # functions to plot the impacts of EU
source("./aggregation_plotting/scripts_charts/map_PDF.R")                                       # functions to plot the impacts on a map
source("./aggregation_plotting/scripts_aggregation/slost_Globiom.R")
source("./aggregation_plotting/scripts_aggregation/wood.R")
source("./aggregation_plotting/scripts_aggregation/slost_ha.R")
############################ SET THE PATH ##############################
# identify the results to access
type_of_data <- "impacts"       # "impacts" or "areas"
case <- "cutoff"              # cutoff, nocutoff, cutoff_timber, nocutoff_timber, LCImpact, Chaudhary2015 or Chaudhary2018
subcase <- ""                   # e.g. plants, mammals or birds (end of the csv files)
case_areas <- "notimber"        # "notimber" or "timber"
energy_exports <- "EPnoex"    # "ex" (Footprint includes energy plantations, Internal EU does not include energy crops but includes exports)
# "EPnoex" (Footprint includes energy plantations and Internal EU includes energy crop and exports)
# "noEPnoex" (Footprint does not include energy plantations, Internal EU does not include nor energy crop nor exports)
if(subcase == "") {
case_subcase <- paste0("_", case)
} else {case_subcase <- paste0("_", case, "_", subcase)}
CI <- FALSE # TRUE or FALSE
year = "2100"
############################ RESULTS DIRECTLY FROM THE MODEL ##############################
# access the results obtained directly from the model
folder_slost = paste0("./results/slost/species-lost_", case, "/")
file_slost = "Slost_mg_"     # in the call of the file the year and the subcase are added
folder_areas = paste0("./results/areas/", case_areas , "/mg/disaggregated/")
############################ ACCESS THE FOLDER WHERE RESULTS ARE AGGREGATED AND PLOTTED ##############################
# calculation -> PLOTTING -> RESULTS -> SUBFOLDER, whose name marks may refer to different types of results (with cutoff, without cutoff, with timber, without timber, etc)
# -> CSV or PLOTS or .Rdata files
mainfolder <- "./aggregation_plotting/results_plots-csv/"
subfolder <- paste0(case, "/")  # subfolder from where the files must be loaded or to where the files must be saved
plots_path <- paste0(mainfolder, subfolder,"plots/")  # path used to save the plots (generated using the .csv data)
file_rdata <- paste0("sums", case_subcase, ".Rdata")
file_rdata_areas <- paste0("areas_", case_areas, ".Rdata")
rdata_path <- paste0(mainfolder, subfolder, file_rdata)
rdata_path_areas <- paste0(mainfolder, "areas/", case_areas, "/", file_rdata_areas)
csv_path <- paste0(mainfolder, subfolder,"csv/")      # path used to save csv (generated using the .Rdata)
csv_path_areas <-  paste0(mainfolder, "areas/", case_areas, "/")     # path used to save csv with data on areas (generated using the .Rdata)
if (energy_exports == "ex") { EUfootprint.barplot.EP(csv_path, case_subcase, plots_path, year) # EU_barplots.R
}else if(energy_exports == "EPnoex") { EUfootprint.barplot.EP(csv_path, case_subcase, plots_path, year)
}else if(energy_exports == "noEPnoex") { EUfootprint.barplot.noEP(csv_path, case_subcase, plots_path, year) }
setwd("C:/Users/Rosa/Documents/GitHub/forest-management")
library(pacman)
p_load(dplyr, tidyr, abind, tidyverse, stringr)  # dataframe management and string management
p_load(ggplot2, colorspace, scico, viridis, RColorBrewer, gridExtra, nord, ggpubr, sf, sp, rgdal) # plotting
select <- dplyr::select
source("./aggregation_plotting/scripts_aggregation/aggregate_results.R")           # functions to convert the results of the model in a single .Rdata file
source("./aggregation_plotting/scripts_aggregation/global_Rdata-to-csv.R")                 # functions to convert the .Rdata file to several .csv for impacts of global land use
source("./aggregation_plotting/scripts_aggregation/areas_Rdata-to-csv.R")                   # functions to convert the .Rdata file to several .csv for areas
source("./aggregation_plotting/scripts_charts/global_time-series.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_charts/map_areas.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_aggregation/EU_Rdata-to-csv.R")                      # functions to convert the .Rdata file to several .csv for EU impacts
source("./aggregation_plotting/scripts_charts/EU_barplots.R")                                   # functions to plot the impacts of EU
source("./aggregation_plotting/scripts_charts/map_PDF.R")                                       # functions to plot the impacts on a map
source("./aggregation_plotting/scripts_aggregation/slost_Globiom.R")
source("./aggregation_plotting/scripts_aggregation/wood.R")
source("./aggregation_plotting/scripts_aggregation/slost_ha.R")
############################ SET THE PATH ##############################
# identify the results to access
type_of_data <- "impacts"       # "impacts" or "areas"
case <- "cutoff_timber"              # cutoff, nocutoff, cutoff_timber, nocutoff_timber, LCImpact, Chaudhary2015 or Chaudhary2018
subcase <- ""                   # e.g. plants, mammals or birds (end of the csv files)
case_areas <- "notimber"        # "notimber" or "timber"
energy_exports <- "EPnoex"    # "ex" (Footprint includes energy plantations, Internal EU does not include energy crops but includes exports)
# "EPnoex" (Footprint includes energy plantations and Internal EU includes energy crop and exports)
# "noEPnoex" (Footprint does not include energy plantations, Internal EU does not include nor energy crop nor exports)
if(subcase == "") {
case_subcase <- paste0("_", case)
} else {case_subcase <- paste0("_", case, "_", subcase)}
CI <- FALSE # TRUE or FALSE
year = "2100"
############################ RESULTS DIRECTLY FROM THE MODEL ##############################
# access the results obtained directly from the model
folder_slost = paste0("./results/slost/species-lost_", case, "/")
file_slost = "Slost_mg_"     # in the call of the file the year and the subcase are added
folder_areas = paste0("./results/areas/", case_areas , "/mg/disaggregated/")
############################ ACCESS THE FOLDER WHERE RESULTS ARE AGGREGATED AND PLOTTED ##############################
# calculation -> PLOTTING -> RESULTS -> SUBFOLDER, whose name marks may refer to different types of results (with cutoff, without cutoff, with timber, without timber, etc)
# -> CSV or PLOTS or .Rdata files
mainfolder <- "./aggregation_plotting/results_plots-csv/"
subfolder <- paste0(case, "/")  # subfolder from where the files must be loaded or to where the files must be saved
plots_path <- paste0(mainfolder, subfolder,"plots/")  # path used to save the plots (generated using the .csv data)
file_rdata <- paste0("sums", case_subcase, ".Rdata")
file_rdata_areas <- paste0("areas_", case_areas, ".Rdata")
rdata_path <- paste0(mainfolder, subfolder, file_rdata)
rdata_path_areas <- paste0(mainfolder, "areas/", case_areas, "/", file_rdata_areas)
csv_path <- paste0(mainfolder, subfolder,"csv/")      # path used to save csv (generated using the .Rdata)
csv_path_areas <-  paste0(mainfolder, "areas/", case_areas, "/")     # path used to save csv with data on areas (generated using the .Rdata)
if (energy_exports == "ex") { EUfootprint.barplot.EP(csv_path, case_subcase, plots_path, year) # EU_barplots.R
}else if(energy_exports == "EPnoex") { EUfootprint.barplot.EP(csv_path, case_subcase, plots_path, year)
}else if(energy_exports == "noEPnoex") { EUfootprint.barplot.noEP(csv_path, case_subcase, plots_path, year) }
setwd("C:/Users/Rosa/Documents/GitHub/forest-management")
library(pacman)
p_load(dplyr, tidyr, abind, tidyverse, stringr)  # dataframe management and string management
p_load(ggplot2, colorspace, scico, viridis, RColorBrewer, gridExtra, nord, ggpubr, sf, sp, rgdal) # plotting
select <- dplyr::select
source("./aggregation_plotting/scripts_aggregation/aggregate_results.R")           # functions to convert the results of the model in a single .Rdata file
source("./aggregation_plotting/scripts_aggregation/global_Rdata-to-csv.R")                 # functions to convert the .Rdata file to several .csv for impacts of global land use
source("./aggregation_plotting/scripts_aggregation/areas_Rdata-to-csv.R")                   # functions to convert the .Rdata file to several .csv for areas
source("./aggregation_plotting/scripts_charts/global_time-series.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_charts/map_areas.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_aggregation/EU_Rdata-to-csv.R")                      # functions to convert the .Rdata file to several .csv for EU impacts
source("./aggregation_plotting/scripts_charts/EU_barplots.R")                                   # functions to plot the impacts of EU
source("./aggregation_plotting/scripts_charts/map_PDF.R")                                       # functions to plot the impacts on a map
source("./aggregation_plotting/scripts_aggregation/slost_Globiom.R")
source("./aggregation_plotting/scripts_aggregation/wood.R")
source("./aggregation_plotting/scripts_aggregation/slost_ha.R")
############################ SET THE PATH ##############################
# identify the results to access
type_of_data <- "impacts"       # "impacts" or "areas"
case <- "nocutoff_timber"              # cutoff, nocutoff, cutoff_timber, nocutoff_timber, LCImpact, Chaudhary2015 or Chaudhary2018
subcase <- ""                   # e.g. plants, mammals or birds (end of the csv files)
case_areas <- "notimber"        # "notimber" or "timber"
energy_exports <- "EPnoex"    # "ex" (Footprint includes energy plantations, Internal EU does not include energy crops but includes exports)
# "EPnoex" (Footprint includes energy plantations and Internal EU includes energy crop and exports)
# "noEPnoex" (Footprint does not include energy plantations, Internal EU does not include nor energy crop nor exports)
if(subcase == "") {
case_subcase <- paste0("_", case)
} else {case_subcase <- paste0("_", case, "_", subcase)}
CI <- FALSE # TRUE or FALSE
year = "2100"
############################ RESULTS DIRECTLY FROM THE MODEL ##############################
# access the results obtained directly from the model
folder_slost = paste0("./results/slost/species-lost_", case, "/")
file_slost = "Slost_mg_"     # in the call of the file the year and the subcase are added
folder_areas = paste0("./results/areas/", case_areas , "/mg/disaggregated/")
############################ ACCESS THE FOLDER WHERE RESULTS ARE AGGREGATED AND PLOTTED ##############################
# calculation -> PLOTTING -> RESULTS -> SUBFOLDER, whose name marks may refer to different types of results (with cutoff, without cutoff, with timber, without timber, etc)
# -> CSV or PLOTS or .Rdata files
mainfolder <- "./aggregation_plotting/results_plots-csv/"
subfolder <- paste0(case, "/")  # subfolder from where the files must be loaded or to where the files must be saved
plots_path <- paste0(mainfolder, subfolder,"plots/")  # path used to save the plots (generated using the .csv data)
file_rdata <- paste0("sums", case_subcase, ".Rdata")
file_rdata_areas <- paste0("areas_", case_areas, ".Rdata")
rdata_path <- paste0(mainfolder, subfolder, file_rdata)
rdata_path_areas <- paste0(mainfolder, "areas/", case_areas, "/", file_rdata_areas)
csv_path <- paste0(mainfolder, subfolder,"csv/")      # path used to save csv (generated using the .Rdata)
csv_path_areas <-  paste0(mainfolder, "areas/", case_areas, "/")     # path used to save csv with data on areas (generated using the .Rdata)
if (energy_exports == "ex") { EUfootprint.barplot.EP(csv_path, case_subcase, plots_path, year) # EU_barplots.R
}else if(energy_exports == "EPnoex") { EUfootprint.barplot.EP(csv_path, case_subcase, plots_path, year)
}else if(energy_exports == "noEPnoex") { EUfootprint.barplot.noEP(csv_path, case_subcase, plots_path, year) }
setwd("C:/Users/Rosa/Documents/GitHub/forest-management")
library(pacman)
p_load(dplyr, tidyr, abind, tidyverse, stringr)  # dataframe management and string management
p_load(ggplot2, colorspace, scico, viridis, RColorBrewer, gridExtra, nord, ggpubr, sf, sp, rgdal) # plotting
select <- dplyr::select
source("./aggregation_plotting/scripts_aggregation/aggregate_results.R")           # functions to convert the results of the model in a single .Rdata file
source("./aggregation_plotting/scripts_aggregation/global_Rdata-to-csv.R")                 # functions to convert the .Rdata file to several .csv for impacts of global land use
source("./aggregation_plotting/scripts_aggregation/areas_Rdata-to-csv.R")                   # functions to convert the .Rdata file to several .csv for areas
source("./aggregation_plotting/scripts_charts/global_time-series.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_charts/map_areas.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_aggregation/EU_Rdata-to-csv.R")                      # functions to convert the .Rdata file to several .csv for EU impacts
source("./aggregation_plotting/scripts_charts/EU_barplots.R")                                   # functions to plot the impacts of EU
source("./aggregation_plotting/scripts_charts/map_PDF.R")                                       # functions to plot the impacts on a map
source("./aggregation_plotting/scripts_aggregation/slost_Globiom.R")
source("./aggregation_plotting/scripts_aggregation/wood.R")
source("./aggregation_plotting/scripts_aggregation/slost_ha.R")
############################ SET THE PATH ##############################
# identify the results to access
type_of_data <- "impacts"       # "impacts" or "areas"
case <- "nocutoff"              # cutoff, nocutoff, cutoff_timber, nocutoff_timber, LCImpact, Chaudhary2015 or Chaudhary2018
subcase <- ""                   # e.g. plants, mammals or birds (end of the csv files)
case_areas <- "notimber"        # "notimber" or "timber"
energy_exports <- "EPnoex"    # "ex" (Footprint includes energy plantations, Internal EU does not include energy crops but includes exports)
# "EPnoex" (Footprint includes energy plantations and Internal EU includes energy crop and exports)
# "noEPnoex" (Footprint does not include energy plantations, Internal EU does not include nor energy crop nor exports)
if(subcase == "") {
case_subcase <- paste0("_", case)
} else {case_subcase <- paste0("_", case, "_", subcase)}
CI <- FALSE # TRUE or FALSE
year = "2100"
############################ RESULTS DIRECTLY FROM THE MODEL ##############################
# access the results obtained directly from the model
folder_slost = paste0("./results/slost/species-lost_", case, "/")
file_slost = "Slost_mg_"     # in the call of the file the year and the subcase are added
folder_areas = paste0("./results/areas/", case_areas , "/mg/disaggregated/")
############################ ACCESS THE FOLDER WHERE RESULTS ARE AGGREGATED AND PLOTTED ##############################
# calculation -> PLOTTING -> RESULTS -> SUBFOLDER, whose name marks may refer to different types of results (with cutoff, without cutoff, with timber, without timber, etc)
# -> CSV or PLOTS or .Rdata files
mainfolder <- "./aggregation_plotting/results_plots-csv/"
subfolder <- paste0(case, "/")  # subfolder from where the files must be loaded or to where the files must be saved
plots_path <- paste0(mainfolder, subfolder,"plots/")  # path used to save the plots (generated using the .csv data)
file_rdata <- paste0("sums", case_subcase, ".Rdata")
file_rdata_areas <- paste0("areas_", case_areas, ".Rdata")
rdata_path <- paste0(mainfolder, subfolder, file_rdata)
rdata_path_areas <- paste0(mainfolder, "areas/", case_areas, "/", file_rdata_areas)
csv_path <- paste0(mainfolder, subfolder,"csv/")      # path used to save csv (generated using the .Rdata)
csv_path_areas <-  paste0(mainfolder, "areas/", case_areas, "/")     # path used to save csv with data on areas (generated using the .Rdata)
if (energy_exports == "ex") { EUfootprint.barplot.EP(csv_path, case_subcase, plots_path, year) # EU_barplots.R
}else if(energy_exports == "EPnoex") { EUfootprint.barplot.EP(csv_path, case_subcase, plots_path, year)
}else if(energy_exports == "noEPnoex") { EUfootprint.barplot.noEP(csv_path, case_subcase, plots_path, year) }
library(pacman)
p_load(dplyr, tidyr, abind, tidyverse, stringr)  # dataframe management and string management
p_load(ggplot2, colorspace, scico, viridis, RColorBrewer, gridExtra, nord, ggpubr, sf, sp, rgdal) # plotting
select <- dplyr::select
source("./aggregation_plotting/scripts_aggregation/aggregate_results.R")           # functions to convert the results of the model in a single .Rdata file
source("./aggregation_plotting/scripts_aggregation/global_Rdata-to-csv.R")                 # functions to convert the .Rdata file to several .csv for impacts of global land use
source("./aggregation_plotting/scripts_aggregation/areas_Rdata-to-csv.R")                   # functions to convert the .Rdata file to several .csv for areas
source("./aggregation_plotting/scripts_charts/global_time-series.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_charts/map_areas.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_aggregation/EU_Rdata-to-csv.R")                      # functions to convert the .Rdata file to several .csv for EU impacts
source("./aggregation_plotting/scripts_charts/EU_barplots.R")                                   # functions to plot the impacts of EU
source("./aggregation_plotting/scripts_charts/map_PDF.R")                                       # functions to plot the impacts on a map
source("./aggregation_plotting/scripts_aggregation/slost_Globiom.R")
source("./aggregation_plotting/scripts_aggregation/wood.R")
source("./aggregation_plotting/scripts_aggregation/slost_ha.R")
############################ SET THE PATH ##############################
# identify the results to access
type_of_data <- "impacts"       # "impacts" or "areas"
case <- "cutoff"              # cutoff, nocutoff, cutoff_timber, nocutoff_timber, LCImpact, Chaudhary2015 or Chaudhary2018
subcase <- ""                   # e.g. plants, mammals or birds (end of the csv files)
case_areas <- "notimber"        # "notimber" or "timber"
energy_exports <- "EPnoex"    # "ex" (Footprint includes energy plantations, Internal EU does not include energy crops but includes exports)
# "EPnoex" (Footprint includes energy plantations and Internal EU includes energy crop and exports)
# "noEPnoex" (Footprint does not include energy plantations, Internal EU does not include nor energy crop nor exports)
if(subcase == "") {
case_subcase <- paste0("_", case)
} else {case_subcase <- paste0("_", case, "_", subcase)}
CI <- FALSE # TRUE or FALSE
year = "2100"
folder_slost = paste0("./results/slost/species-lost_", case, "/")
file_slost = "Slost_mg_"     # in the call of the file the year and the subcase are added
folder_areas = paste0("./results/areas/", case_areas , "/mg/disaggregated/")
############################ ACCESS THE FOLDER WHERE RESULTS ARE AGGREGATED AND PLOTTED ##############################
# calculation -> PLOTTING -> RESULTS -> SUBFOLDER, whose name marks may refer to different types of results (with cutoff, without cutoff, with timber, without timber, etc)
# -> CSV or PLOTS or .Rdata files
mainfolder <- "./aggregation_plotting/results_plots-csv/"
subfolder <- paste0(case, "/")  # subfolder from where the files must be loaded or to where the files must be saved
plots_path <- paste0(mainfolder, subfolder,"plots/")  # path used to save the plots (generated using the .csv data)
file_rdata <- paste0("sums", case_subcase, ".Rdata")
file_rdata_areas <- paste0("areas_", case_areas, ".Rdata")
rdata_path <- paste0(mainfolder, subfolder, file_rdata)
rdata_path_areas <- paste0(mainfolder, "areas/", case_areas, "/", file_rdata_areas)
csv_path <- paste0(mainfolder, subfolder,"csv/")      # path used to save csv (generated using the .Rdata)
csv_path_areas <-  paste0(mainfolder, "areas/", case_areas, "/")     # path used to save csv with data on areas (generated using the .Rdata)
if (energy_exports == "ex") { EUinternal.barplot.noEPex(csv_path, case_subcase, plots_path, year) # EU_barplots.R
}else if(energy_exports == "EPnoex") { EUinternal.barplot.EPnoex(csv_path, case_subcase, plots_path, year)
}else if(energy_exports == "noEPnoex") { EUinternal.barplot.noEPnoex(csv_path, case_subcase, plots_path, year)}
setwd("C:/Users/Rosa/Documents/GitHub/forest-management")
library(pacman)
p_load(dplyr, tidyr, abind, tidyverse, stringr)  # dataframe management and string management
p_load(ggplot2, colorspace, scico, viridis, RColorBrewer, gridExtra, nord, ggpubr, sf, sp, rgdal) # plotting
select <- dplyr::select
source("./aggregation_plotting/scripts_aggregation/aggregate_results.R")           # functions to convert the results of the model in a single .Rdata file
source("./aggregation_plotting/scripts_aggregation/global_Rdata-to-csv.R")                 # functions to convert the .Rdata file to several .csv for impacts of global land use
source("./aggregation_plotting/scripts_aggregation/areas_Rdata-to-csv.R")                   # functions to convert the .Rdata file to several .csv for areas
source("./aggregation_plotting/scripts_charts/global_time-series.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_charts/map_areas.R")                            # functions to plot the impacts of global land use
source("./aggregation_plotting/scripts_aggregation/EU_Rdata-to-csv.R")                      # functions to convert the .Rdata file to several .csv for EU impacts
source("./aggregation_plotting/scripts_charts/EU_barplots.R")                                   # functions to plot the impacts of EU
source("./aggregation_plotting/scripts_charts/map_PDF.R")                                       # functions to plot the impacts on a map
source("./aggregation_plotting/scripts_aggregation/slost_Globiom.R")
source("./aggregation_plotting/scripts_aggregation/wood.R")
source("./aggregation_plotting/scripts_aggregation/slost_ha.R")
############################ SET THE PATH ##############################
# identify the results to access
type_of_data <- "impacts"       # "impacts" or "areas"
case <- "nocutoff"              # cutoff, nocutoff, cutoff_timber, nocutoff_timber, LCImpact, Chaudhary2015 or Chaudhary2018
subcase <- ""                   # e.g. plants, mammals or birds (end of the csv files)
case_areas <- "notimber"        # "notimber" or "timber"
energy_exports <- "EPnoex"    # "ex" (Footprint includes energy plantations, Internal EU does not include energy crops but includes exports)
# "EPnoex" (Footprint includes energy plantations and Internal EU includes energy crop and exports)
# "noEPnoex" (Footprint does not include energy plantations, Internal EU does not include nor energy crop nor exports)
if(subcase == "") {
case_subcase <- paste0("_", case)
} else {case_subcase <- paste0("_", case, "_", subcase)}
CI <- FALSE # TRUE or FALSE
year = "2100"
############################ RESULTS DIRECTLY FROM THE MODEL ##############################
# access the results obtained directly from the model
folder_slost = paste0("./results/slost/species-lost_", case, "/")
file_slost = "Slost_mg_"     # in the call of the file the year and the subcase are added
folder_areas = paste0("./results/areas/", case_areas , "/mg/disaggregated/")
############################ ACCESS THE FOLDER WHERE RESULTS ARE AGGREGATED AND PLOTTED ##############################
# calculation -> PLOTTING -> RESULTS -> SUBFOLDER, whose name marks may refer to different types of results (with cutoff, without cutoff, with timber, without timber, etc)
# -> CSV or PLOTS or .Rdata files
mainfolder <- "./aggregation_plotting/results_plots-csv/"
subfolder <- paste0(case, "/")  # subfolder from where the files must be loaded or to where the files must be saved
plots_path <- paste0(mainfolder, subfolder,"plots/")  # path used to save the plots (generated using the .csv data)
file_rdata <- paste0("sums", case_subcase, ".Rdata")
file_rdata_areas <- paste0("areas_", case_areas, ".Rdata")
rdata_path <- paste0(mainfolder, subfolder, file_rdata)
rdata_path_areas <- paste0(mainfolder, "areas/", case_areas, "/", file_rdata_areas)
csv_path <- paste0(mainfolder, subfolder,"csv/")      # path used to save csv (generated using the .Rdata)
csv_path_areas <-  paste0(mainfolder, "areas/", case_areas, "/")     # path used to save csv with data on areas (generated using the .Rdata)
create.csv.global(CI, rdata_path, csv_path, case_subcase) # global_Rdata-to-csv.R
rdata_path
case_subcase
create.csv.global(CI, rdata_path, csv_path, case_subcase) # global_Rdata-to-csv.R
create.csv.noAF(rdata_path, csv_path, case_subcase) # global.R
plot.global.time.series.CI(csv_path, case_subcase, plots_path) # global_time-series.R --> noAF
