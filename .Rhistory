map_naturalness <- ggplot() +
geom_sf(data = regions, fill = "transparent", colour = "black") +
geom_point(data = d.ch, aes(x = x, y = y, colour = Naturalness))
map_naturalness
?aes
map_455 <- ggplot() +
geom_sf(data = regions, fill = "transparent", colour = "black") +
geom_point(data = d.ch, aes(x = x, y = y, colour = groups, shape = Naturalness))
map_455
map_455 <- ggplot() +
geom_sf(data = regions, fill = "transparent", colour = "black") +
geom_point(data = d.ch, aes(x = x, y = y, shape = groups, color = Naturalness))
map_455
map_455 <- ggplot() +
geom_sf(data = regions, fill = "transparent", colour = "black") +
geom_point(data = d.ch, aes(x = x, y = y, shape = groups, color = Naturalness, size = 5))
map_455
map_455 <- ggplot() +
geom_sf(data = regions, fill = "transparent", colour = "black") +
geom_point(data = d.ch, aes(x = x, y = y, shape = groups, color = Naturalness, size = 2))
map_455
map_455 <- ggplot() +
geom_sf(data = regions, fill = "transparent", colour = "black") +
geom_point(data = d.ch, aes(x = x, y = y), shape = groups, color = Naturalness, size = 2)
map_455 <- ggplot() +
geom_sf(data = regions, fill = "transparent", colour = "black") +
geom_point(data = d.ch, aes(x = x, y = y, shape = groups, color = Naturalness), size = 2)
map_455
map_455 <- ggplot() +
geom_sf(data = regions, fill = "transparent", colour = "black") +
geom_point(data = d.ch, aes(x = x, y = y, shape = groups, color = Naturalness), size = 3)
map_455
table(d.ch$groups, d.ch$Naturalness)
map_455 <- ggplot() +
geom_sf(data = regions, fill = "transparent", colour = "black") +
geom_point(data = d.ch, aes(x = x, y = y, shape = groups, color = Naturalness), size = 3)
map_455
map_455 <- ggplot() +
geom_sf(data = regions, fill = "transparent", colour = "black") +
geom_point(data = d.ch, aes(x = x, y = y, shape = groups, color = Naturalness), size = 2)
map_455
load("C:/Users/Rosa/Documents/PhD_project/Functional_diversity/sPlot/sPlot3.0/SoilClim_sPlot3")
load("C:/Users/Rosa/Documents/PhD_project/Functional_diversity/sPlot/sPlot3.0/SoilClim_sPlot3.Rdata")
head(soilclim)
soilclim <- data.frame(soilclim)
head(soilclim)
elevation <- soilclim %>% filter(PlotObservationID %in% d.ch$PlotObservationID)
head(elevation)
min(elevation)
elevation <- soilclim %>% filter(PlotObservationID %in% d.ch$PlotObservationID) %>%
select(PlotObservationID, Elevation_median)
min(elevation$Elevation_median)
max(elevation$Elevation_median)
elevation <- soilclim %>% filter(PlotObservationID %in% d.ch$PlotObservationID) %>%
select(PlotObservationID, Elevation_median) %>%
rename(elevation = Elevation_median)
min(elevation$elevation) # 192
max(elevation$elevation) # 2281
d.ch <- d.ch %>% left_join(elevation, by = "PlotObservationID")
d.ch$elev_class <- cut(d.ch$elevation,
breaks = c(0, 800, 1700, Inf),
labels = c("0-800", "800-1700", "1700>"))
head(d.ch)
map_elev <- ggplot() +
geom_sf(data = regions, fill = "transparent", colour = "black") +
geom_point(data = d.ch, aes(x = x, y = y, shape = elev_class, color = Naturalness), size = 2)
map_elev
map_elev <- ggplot() +
geom_sf(data = regions, fill = "transparent", colour = "black") +
geom_point(data = d.ch, aes(x = x, y = y, shape = groups, color = elev_class), size = 2)
map_elev
ggscatter(d.ch, x = "elevation", y = "Naturalness",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Elevation", ylab = "Naturalness")
str(d.ch)
d$Naturalness <- as.number(d$Naturalness)
d$Naturalness <- as.numeric(d$Naturalness)
d.ch$Naturalness <- as.numeric(d.ch$Naturalness)
ggplot(d.ch, aes(x = region, y = CWM)) +
geom_boxplot()  +
ggtitle("CWM vs region")
### PRECIPITATION ###
ggplot(d.ch, aes(x = annual_prec, y = CWM)) +
geom_point() +
ggtitle("CWM vs annual precipitation")
ggplot(d.ch, aes(x = prec_season, y = CWM)) +
geom_point()  +
ggtitle("CWM vs precipitation seasonality")
### TEMPERATURE ###
ggplot(d.ch, aes(x = annual_temp, y = CWM)) +
geom_point()  +
ggtitle("CWM vs annual temperature")
ggplot(d.ch, aes(x = temp_season, y = CWM)) +
geom_point()  +
ggtitle("CWM vs temperature seasonality")
### SOIL ###
ggplot(d.ch, aes(x = cat_exchenge, y = CWM)) +
geom_point()  +
ggtitle("CWM vs cation exchange capacity")
ggplot(d.ch, aes(x = org_carbon, y = CWM)) +
geom_point()  +
ggtitle("CWM vs organic carbon content")
ggplot(d.ch, aes(x = pH, y = CWM)) +
geom_point()  +
ggtitle("CWM vs pH")
### LAND USE ###
ggplot(d.ch, aes(x = land_use, y = CWM)) +
geom_boxplot()  +
ggtitle("CWM vs land use")
ggplot(d.ch, aes(x = Naturalness, y = CWM)) + # leaf carbon content seems to be quite responsive to different levels of naturalness
geom_boxplot()  +
ggtitle("CWM vs naturalness")
ggplot(d.ch, aes(x = CWM)) +
geom_histogram(alpha = 0.3, position = 'identity', bins = 30, aes(fill = Naturalness)) +
ggtitle("CWM vs naturalness")
### PRINCIPAL COMPONENTS ###
ggplot(d.ch, aes(x = PC1, y = CWM)) +
geom_point()  +
ggtitle("CWM vs PC1")
ggplot(d.ch, aes(x = PC2, y = CWM)) + # leaf carbon content seems to be quite responsive to different levels of naturalness
geom_point()  +
ggtitle("CWM vs PC2")
d.ch$Naturalness <- as.factor(d.ch$Naturalness)
### REGIONS ###
ggplot(d.ch, aes(x = region, y = CWM)) +
geom_boxplot()  +
ggtitle("CWM vs region")
### PRECIPITATION ###
ggplot(d.ch, aes(x = annual_prec, y = CWM)) +
geom_point() +
ggtitle("CWM vs annual precipitation")
ggplot(d.ch, aes(x = prec_season, y = CWM)) +
geom_point()  +
ggtitle("CWM vs precipitation seasonality")
### TEMPERATURE ###
ggplot(d.ch, aes(x = annual_temp, y = CWM)) +
geom_point()  +
ggtitle("CWM vs annual temperature")
ggplot(d.ch, aes(x = temp_season, y = CWM)) +
geom_point()  +
ggtitle("CWM vs temperature seasonality")
### SOIL ###
ggplot(d.ch, aes(x = cat_exchenge, y = CWM)) +
geom_point()  +
ggtitle("CWM vs cation exchange capacity")
ggplot(d.ch, aes(x = org_carbon, y = CWM)) +
geom_point()  +
ggtitle("CWM vs organic carbon content")
ggplot(d.ch, aes(x = pH, y = CWM)) +
geom_point()  +
ggtitle("CWM vs pH")
### LAND USE ###
ggplot(d.ch, aes(x = land_use, y = CWM)) +
geom_boxplot()  +
ggtitle("CWM vs land use")
ggplot(d.ch, aes(x = Naturalness, y = CWM)) + # leaf carbon content seems to be quite responsive to different levels of naturalness
geom_boxplot()  +
ggtitle("CWM vs naturalness")
ggplot(d.ch, aes(x = CWM)) +
geom_histogram(alpha = 0.3, position = 'identity', bins = 30, aes(fill = Naturalness)) +
ggtitle("CWM vs naturalness")
### PRINCIPAL COMPONENTS ###
ggplot(d.ch, aes(x = PC1, y = CWM)) +
geom_point()  +
ggtitle("CWM vs PC1")
ggplot(d.ch, aes(x = PC2, y = CWM)) + # leaf carbon content seems to be quite responsive to different levels of naturalness
geom_point()  +
ggtitle("CWM vs PC2")
d.ch$Naturalness <- as.factor(d.ch$Naturalness)
d.ch$Naturalness <- as.numeric(d.ch$Naturalness)
d.ch.lm <- lm(data = d.ch, CWM ~ region + PC1 + land_use + Naturalness)
summary(d.ch.lm)
d.ch.aov <- aov(data = d.ch, CWM ~ region + PC1 + land_use + Naturalness)
summary(d.ch.aov)
hist(resid(d.ch.aov), breaks = 30, main = "Histogram of the residuals", xlab = "Residuals")
d.ch.aov6 <- aov(data = d.ch, CWM ~ region + PC1 + PC2 + land_use + Naturalness)
summary(d.ch.aov6)
pred <- predict(d.ch.aov6)
tot <- sum(summary(d.ch.aov6)[[1]][,"Sum Sq"])
r_squared = (tot - sum(summary(d.ch.aov6)[[1]]["Residuals","Sum Sq"]))/tot
r_squared
d.ch.lm6 <-lm(data = d.ch, CWM ~ region + PC1 + PC2 + land_use + Naturalness)
summary(d.ch.lm6)
plot(d.ch.aov6)
map_455 <- ggplot() +
geom_sf(data = regions, fill = "transparent", colour = "black") +
geom_point(data = d.ch, aes(x = x, y = y, shape = groups, color = Naturalness), size = 2)
map_455
map_455 <- ggplot() +
geom_sf(data = regions, fill = "transparent", colour = "black") +
geom_point(data = d.ch, aes(x = x, y = y, shape = groups, color = Naturalness), size = 2) +
scale_color_viridis(discrete=TRUE)
map_455
map_455 <- ggplot() +
geom_sf(data = regions, fill = "transparent", colour = "black") +
geom_point(data = d.ch, aes(x = x, y = y, shape = groups, color = Naturalness), size = 2) +
scale_color_viridis
?scale_color_viridis
map_455 <- ggplot() +
geom_sf(data = regions, fill = "transparent", colour = "black") +
geom_point(data = d.ch, aes(x = x, y = y, shape = groups, color = Naturalness), size = 2) +
scale_color_viridis(discrete = FALSE)
map_455
d <- d %>% rename(Unnaturalness = Naturalness)
d.ch <- d.ch %>% rename(Unnaturalness = Naturalness)
### REGIONS ###
ggplot(d.ch, aes(x = region, y = CWM)) +
geom_boxplot()  +
ggtitle("CWM vs region")
### PRECIPITATION ###
ggplot(d.ch, aes(x = annual_prec, y = CWM)) +
geom_point() +
ggtitle("CWM vs annual precipitation")
ggplot(d.ch, aes(x = prec_season, y = CWM)) +
geom_point()  +
ggtitle("CWM vs precipitation seasonality")
### TEMPERATURE ###
ggplot(d.ch, aes(x = annual_temp, y = CWM)) +
geom_point()  +
ggtitle("CWM vs annual temperature")
ggplot(d.ch, aes(x = temp_season, y = CWM)) +
geom_point()  +
ggtitle("CWM vs temperature seasonality")
### SOIL ###
ggplot(d.ch, aes(x = cat_exchenge, y = CWM)) +
geom_point()  +
ggtitle("CWM vs cation exchange capacity")
ggplot(d.ch, aes(x = org_carbon, y = CWM)) +
geom_point()  +
ggtitle("CWM vs organic carbon content")
ggplot(d.ch, aes(x = pH, y = CWM)) +
geom_point()  +
ggtitle("CWM vs pH")
### LAND USE ###
ggplot(d.ch, aes(x = land_use, y = CWM)) +
geom_boxplot()  +
ggtitle("CWM vs land use")
ggplot(d.ch, aes(x = Unnaturalness, y = CWM)) + # leaf carbon content seems to be quite responsive to different levels of Unnaturalness
geom_boxplot()  +
ggtitle("CWM vs Unnaturalness")
ggplot(d.ch, aes(x = CWM)) +
geom_histogram(alpha = 0.3, position = 'identity', bins = 30, aes(fill = Unnaturalness)) +
ggtitle("CWM vs Unnaturalness")
### PRINCIPAL COMPONENTS ###
ggplot(d.ch, aes(x = PC1, y = CWM)) +
geom_point()  +
ggtitle("CWM vs PC1")
ggplot(d.ch, aes(x = PC2, y = CWM)) + # leaf carbon content seems to be quite responsive to different levels of Unnaturalness
geom_point()  +
ggtitle("CWM vs PC2")
d.ch$Unnaturalness <- as.factor(d.ch$Unnaturalness)
### REGIONS ###
ggplot(d.ch, aes(x = region, y = CWM)) +
geom_boxplot()  +
ggtitle("CWM vs region")
### PRECIPITATION ###
ggplot(d.ch, aes(x = annual_prec, y = CWM)) +
geom_point() +
ggtitle("CWM vs annual precipitation")
ggplot(d.ch, aes(x = prec_season, y = CWM)) +
geom_point()  +
ggtitle("CWM vs precipitation seasonality")
### TEMPERATURE ###
ggplot(d.ch, aes(x = annual_temp, y = CWM)) +
geom_point()  +
ggtitle("CWM vs annual temperature")
ggplot(d.ch, aes(x = temp_season, y = CWM)) +
geom_point()  +
ggtitle("CWM vs temperature seasonality")
### SOIL ###
ggplot(d.ch, aes(x = cat_exchenge, y = CWM)) +
geom_point()  +
ggtitle("CWM vs cation exchange capacity")
ggplot(d.ch, aes(x = org_carbon, y = CWM)) +
geom_point()  +
ggtitle("CWM vs organic carbon content")
ggplot(d.ch, aes(x = pH, y = CWM)) +
geom_point()  +
ggtitle("CWM vs pH")
### LAND USE ###
ggplot(d.ch, aes(x = land_use, y = CWM)) +
geom_boxplot()  +
ggtitle("CWM vs land use")
ggplot(d.ch, aes(x = Unnaturalness, y = CWM)) + # leaf carbon content seems to be quite responsive to different levels of Unnaturalness
geom_boxplot()  +
ggtitle("CWM vs Unnaturalness")
ggplot(d.ch, aes(x = CWM)) +
geom_histogram(alpha = 0.3, position = 'identity', bins = 30, aes(fill = Unnaturalness)) +
ggtitle("CWM vs Unnaturalness")
### PRINCIPAL COMPONENTS ###
ggplot(d.ch, aes(x = PC1, y = CWM)) +
geom_point()  +
ggtitle("CWM vs PC1")
ggplot(d.ch, aes(x = PC2, y = CWM)) + # leaf carbon content seems to be quite responsive to different levels of Unnaturalness
geom_point()  +
ggtitle("CWM vs PC2")
d.ch$Unnaturalness <- as.numeric(d.ch$Unnaturalness)
d.ch.lm <- lm(data = d.ch, CWM ~ region + prec_season + land_use + Unnaturalness)
summary(d.ch.lm)
d.ch.aov <- aov(data = d.ch, CWM ~ region + prec_season + land_use + Unnaturalness)
summary(d.ch.aov)
d.ch.lm <- lm(data = d.ch, CWM ~ region + annual_temp + land_use + Unnaturalness)
summary(d.ch.lm)
d.ch.aov <- aov(data = d.ch, CWM ~ region + annual_temp + land_use + Unnaturalness)
summary(d.ch.aov)
d.ch.lm <- lm(data = d.ch, CWM ~ region + pH + land_use + Unnaturalness)
summary(d.ch.lm)
d.ch.aov <- aov(data = d.ch, CWM ~ region + pH + land_use + Unnaturalness)
summary(d.ch.aov) # Ph seems to have much more effect on CWM than temperature or precipitation
d.ch.aov6 <- aov(data = d.ch, CWM ~ region + PC1 + PC2 + land_use + Unnaturalness)
summary(d.ch.aov6)
d.ch.lm <- lm(data = d.ch, CWM ~ region + PC1 + land_use + Unnaturalness)
summary(d.ch.lm)
d.ch.aov <- aov(data = d.ch, CWM ~ region + PC1 + land_use + Unnaturalness)
summary(d.ch.aov)
d.ch.lm <- lm(data = d.ch, CWM ~ region + PC2 + land_use + Unnaturalness)
summary(d.ch.lm)
d.ch.aov <- aov(data = d.ch, CWM ~ region + PC2 + land_use + Unnaturalness)
summary(d.ch.aov)
d.ch.lm6 <- aov(data = d.ch, CWM ~ region + PC1 + PC2 + land_use + Unnaturalness)
summary(d.ch.lm6)
d.ch.aov6 <- aov(data = d.ch, CWM ~ region + PC1 + PC2 + land_use + Unnaturalness)
summary(d.ch.aov6)
d.ch.lm6 <- lm(data = d.ch, CWM ~ region + PC1 + PC2 + land_use + Unnaturalness)
summary(d.ch.lm6)
d.ch.aov6 <- aov(data = d.ch, CWM ~ region + PC1 + PC2 + land_use + Unnaturalness)
summary(d.ch.aov6)
d.ch.gls_nocorr <- gls(CWM ~ region + pH + land_use + Unnaturalness, data = d.ch)
summary(d.ch.gls_nocorr)
d.ch.gls <- gls(CWM ~ region + pH + land_use + Unnaturalness, data = d.ch,
correlation = corExp(form = ~ x + y, metric = "euclidean"))
summary(d.ch.gls)
plot(d.ch.aov6)
d.ch$groups <- cut(d.ch$CWM,
breaks = c(-Inf, 447, 455, Inf),
labels = c("below 447","447-455", "above 455"))
table(d.ch$groups, d.ch$Unnaturalness)
head(d.ch)
map_elev <- ggplot() +
geom_sf(data = regions, fill = "transparent", colour = "black") +
geom_point(data = d.ch, aes(x = x, y = y, shape = groups, color = elev_class), size = 2)
map_elev
table(d.ch$elev_class, d.ch$groups)
table(d.ch$groups, d.ch$elev_class)
d.ch$Unnaturalness <- as.factor(d.ch$Unnaturalness)
d.ch.lm6 <-lm(data = d.ch, CWM ~ region + PC1 + PC2 + land_use + Unnaturalness)
summary(d.ch.lm6)
plot(d.ch.aov6)
d.ch.aov6 <- aov(data = d.ch, CWM ~ region + PC1 + PC2 + land_use + Unnaturalness)
plot(d.ch.aov6)
d.ch$Unnaturalness <- as.numeric(d.ch$Unnaturalness)
d.ch.lm6 <- lm(data = d.ch, CWM ~ region + PC1 + PC2 + land_use + Unnaturalness)
summary(d.ch.lm6)
d.ch.aov6 <- aov(data = d.ch, CWM ~ region + PC1 + PC2 + land_use + Unnaturalness)
summary(d.ch.aov6)
pred <- predict(d.ch.aov6)
tot <- sum(summary(d.ch.aov6)[[1]][,"Sum Sq"])
var_data <- var(d$CWM) # 371.5662
var_res <- var(resid(d.ch.aov6)) # 100.48
var_exp <- (var_data-var_res)/var_data # 73%
d.ch.lm6 <-lm(data = d.ch, CWM ~ region + PC1 + PC2 + land_use + Unnaturalness)
summary(d.ch.lm6)
r_squared = (tot - sum(summary(d.ch.aov6)[[1]]["Residuals","Sum Sq"]))/tot
plot(d.ch.aov6)
map_455 <- ggplot() +
geom_sf(data = regions, fill = "transparent", colour = "black") +
geom_point(data = d.ch, aes(x = x, y = y, shape = groups, color = Unnaturalness), size = 2) +
scale_color_viridis(discrete = FALSE)
map_455
?corrplot
M <- matrix(d.ch %>% select(Unnaturalness, elevation))
head(M)
M
M <- data.matrix(d.ch %>% select(Unnaturalness, elevation))
M
corrplot(M, type = "upper", order = "original")
library(corrplot)
corrplot(M, type = "upper", order = "original")
M <- corr(data.matrix(d.ch %>% select(Unnaturalness, elevation)))
M <- cor(data.matrix(d.ch %>% select(Unnaturalness, elevation)))
corrplot(M, type = "upper", order = "original")
M
res <- cor.test(d.ch$elev_class, d.ch$Unnaturalness,
method = "pearson")
res <- cor.test(d.ch$elevation, d.ch$Unnaturalness,
method = "pearson")
res
res
library(asreml)
install.packages("asreml")
setwd("C:/Users/Rosa/Documents/GitHub/forest-management")
setwd("C:/Users/Rosa/Documents/GitHub/forest-management")
#data<-read.csv("./plotting/charts_examples/Global_development_sel.csv", header = TRUE)
data <- read.csv("./aggregation_plotting/results_plots-csv/cutoff/csv/EUForest_time-series_cutoff_EPnoex.csv", header = TRUE)
#dev.new()
library(ggplot2)
library(viridis)
library(colorspace)
library(tidyverse)
library(dplyr)
library(RColorBrewer)
library(scico)
# factorize the forest management scenarios and rename the elements
data$Scenario <- factor(data$Scenario, levels=unique(data$Scenario))
label_scenario <- c("no AFM", "AFM-free", "AFM 25%", "AFM 50%", "AFM 75%", "AFM 100%")
data <- data %>% mutate(Scenario = str_replace(Scenario, "noAFM", "no AFM"), Scenario = str_replace(Scenario, "AFMfree", "AFM-free"),
Scenario = str_replace(Scenario, "AFM25", "AFM 25%"), Scenario = str_replace(Scenario, "AFM50", "AFM 50%"),
Scenario = str_replace(Scenario, "AFM75", "AFM 75%"), Scenario = str_replace(Scenario, "AFM100", "AFM 100%"))
# set the order of the Scenarios
# rename the groups
data <- data %>% mutate(Group = str_replace(Group, "REF_MFM", "RCP6.5 (REF) - Multifunctional"), Group = str_replace(Group, "REF_SFM", "RCP6.5 (REF) - Set-aside"),
Group = str_replace(Group, "RCP2.6_MFM", "RCP2.6 - Multifunctional"), Group = str_replace(Group, "RCP2.6_SFM", "RCP2.6 - Set-aside"))
# set the order of the groups
data$Group <- factor(data$Group, levels = c("RCP6.5 (REF) - Multifunctional", "RCP6.5 (REF) - Set-aside", "RCP2.6 - Multifunctional", "RCP2.6 - Set-aside"))
data$Scenario <- factor(data$Scenario, levels=unique(data$Scenario))
palette_name = "viridis"
pal <- c("#DCF3FA", "#BFD3E6", "#9EBCDA", "#8C96C6", "#8856A7", "#810F7C")
pal <- c("#ededed", "#D9D9D9", "#BDBDBD", "#969696", "#636363", "#252525")
#jpg(file = "./plotting/noAF_CI.jpg", width = 900, height = 700)
figure <-
ggplot(data, aes(x=Year, y=PDFx100, group = Scenario, col = Scenario, linetype = Scenario)) +
geom_line(size = 0.8) +
scale_colour_viridis(discrete = TRUE)+
#scale_colour_brewer(palette = palette_name) +
#scale_color_manual(values = pal) +
#scale_color_discrete_sequential(palette_name, c1 = 50) +
#scale_color_scico_d(palette = palette_name, direction = -1) +
theme_minimal() + # select the theme of the plot
#geom_ribbon(aes(ymin=lower95, ymax=upper95, col = "gray70"), alpha = 0.4)+
#theme_light(base_size = 16) +
#geom_vline(xintercept = 2020) +
xlim(2020, 2100)+
xlab("Years") + ylab("PDF%") +
theme(plot.title = element_text(size = 12, face = "bold.italic")) +
theme(panel.border = element_rect(color="grey", fill=NA)) +
facet_wrap(~ Group) +
theme(legend.position="bottom", legend.text = element_text(size = 11),
strip.text.x = element_text(size = 11), axis.title = element_text(size = 11),
axis.text = element_text(size = 9),
#legend.key.size = unit(1.5, "cm"),
legend.key.width = unit(1.5,"cm")) #, legend.text = element_text(size = 8), legend.title = element_text(size = 8)) +
ggtitle("Fraction of species loss over time caused by EU forest biomass demand")
figure
# plot
# save as pdf
ggsave(paste0("./aggregation_plotting/results_plots-csv/cutoff/plots/EUForest_time-series.pdf"), width = 10, height = 8)
setwd("C:/Users/Rosa/Documents/GitHub/forest-management")
#data<-read.csv("./plotting/charts_examples/Global_development_sel.csv", header = TRUE)
data <- read.csv("./aggregation_plotting/results_plots-csv/cutoff/csv/EUFootprint_time-series_cutoff_EPnoex.csv", header = TRUE)
#dev.new()
library(ggplot2)
library(viridis)
library(colorspace)
library(tidyverse)
library(dplyr)
library(RColorBrewer)
library(scico)
#data<-read.csv("./plotting/charts_examples/Global_development_sel.csv", header = TRUE)
data <- read.csv("./aggregation_plotting/results_plots-csv/cutoff/csv/EUFootprint_time-series_cutoff_EP.csv", header = TRUE)
#dev.new()
library(ggplot2)
library(viridis)
library(colorspace)
library(tidyverse)
library(dplyr)
library(RColorBrewer)
library(scico)
# factorize the forest management scenarios and rename the elements
data$Scenario <- factor(data$Scenario, levels=unique(data$Scenario))
label_scenario <- c("no AFM", "AFM-free", "AFM 25%", "AFM 50%", "AFM 75%", "AFM 100%")
data <- data %>% mutate(Scenario = str_replace(Scenario, "noAFM", "no AFM"), Scenario = str_replace(Scenario, "AFMfree", "AFM-free"),
Scenario = str_replace(Scenario, "AFM25", "AFM 25%"), Scenario = str_replace(Scenario, "AFM50", "AFM 50%"),
Scenario = str_replace(Scenario, "AFM75", "AFM 75%"), Scenario = str_replace(Scenario, "AFM100", "AFM 100%"))
# set the order of the Scenarios
# rename the groups
data <- data %>% mutate(Group = str_replace(Group, "REF_MFM", "RCP6.5 (REF) - Multifunctional"), Group = str_replace(Group, "REF_SFM", "RCP6.5 (REF) - Set-aside"),
Group = str_replace(Group, "RCP2.6_MFM", "RCP2.6 - Multifunctional"), Group = str_replace(Group, "RCP2.6_SFM", "RCP2.6 - Set-aside"))
# set the order of the groups
data$Group <- factor(data$Group, levels = c("RCP6.5 (REF) - Multifunctional", "RCP6.5 (REF) - Set-aside", "RCP2.6 - Multifunctional", "RCP2.6 - Set-aside"))
data$Scenario <- factor(data$Scenario, levels=unique(data$Scenario))
palette_name = "viridis"
pal <- c("#DCF3FA", "#BFD3E6", "#9EBCDA", "#8C96C6", "#8856A7", "#810F7C")
pal <- c("#ededed", "#D9D9D9", "#BDBDBD", "#969696", "#636363", "#252525")
#jpg(file = "./plotting/noAF_CI.jpg", width = 900, height = 700)
figure <-
ggplot(data, aes(x=Year, y=PDFx100, group = Scenario, col = Scenario, linetype = Scenario)) +
geom_line(size = 0.8) +
scale_colour_viridis(discrete = TRUE)+
#scale_colour_brewer(palette = palette_name) +
#scale_color_manual(values = pal) +
#scale_color_discrete_sequential(palette_name, c1 = 50) +
#scale_color_scico_d(palette = palette_name, direction = -1) +
theme_minimal() + # select the theme of the plot
#geom_ribbon(aes(ymin=lower95, ymax=upper95, col = "gray70"), alpha = 0.4)+
#theme_light(base_size = 16) +
#geom_vline(xintercept = 2020) +
xlim(2020, 2100)+
xlab("Years") + ylab("PDF%") +
theme(plot.title = element_text(size = 12, face = "bold.italic")) +
theme(panel.border = element_rect(color="grey", fill=NA)) +
facet_wrap(~ Group) +
theme(legend.position="bottom", legend.text = element_text(size = 11),
strip.text.x = element_text(size = 11), axis.title = element_text(size = 11),
axis.text = element_text(size = 9),
#legend.key.size = unit(1.5, "cm"),
legend.key.width = unit(1.5,"cm")) #, legend.text = element_text(size = 8), legend.title = element_text(size = 8)) +
ggtitle("Fraction of species loss over time caused by EU forest biomass demand")
figure
# plot
# save as pdf
ggsave(paste0("./aggregation_plotting/results_plots-csv/cutoff/plots/EUFootprint_time-series.pdf"), width = 10, height = 8)
